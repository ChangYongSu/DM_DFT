#if !defined(AFX_MMCONNECTORX_H__394F7421_3406_4272_837A_0B36D82DC7B4__INCLUDED_)
#define AFX_MMCONNECTORX_H__394F7421_3406_4272_837A_0B36D82DC7B4__INCLUDED_

#if _MSC_VER > 1000
#pragma once
#endif // _MSC_VER > 1000
// Machine generated IDispatch wrapper class(es) created by Microsoft Visual C++

// NOTE: Do not modify the contents of this file.  If this class is regenerated by
//  Microsoft Visual C++, your modifications will be overwritten.


// Dispatch interfaces referenced by this interface
class CMMDspComponentX;

/////////////////////////////////////////////////////////////////////////////
// CMMConnectorX wrapper class

class CMMConnectorX : public CWnd
{
protected:
	DECLARE_DYNCREATE(CMMConnectorX)
public:
	CLSID const& GetClsid()
	{
		static CLSID const clsid
			= { 0x21c2a3c3, 0xd79c, 0x11d1, { 0x88, 0x18, 0xc1, 0x99, 0x19, 0x8e, 0x97, 0x2 } };
		return clsid;
	}
	virtual BOOL Create(LPCTSTR lpszClassName,
		LPCTSTR lpszWindowName, DWORD dwStyle,
		const RECT& rect,
		CWnd* pParentWnd, UINT nID,
		CCreateContext* pContext = NULL)
	{ return CreateControl(GetClsid(), lpszWindowName, dwStyle, rect, pParentWnd, nID); }

    BOOL Create(LPCTSTR lpszWindowName, DWORD dwStyle,
		const RECT& rect, CWnd* pParentWnd, UINT nID,
		CFile* pPersist = NULL, BOOL bStorage = FALSE,
		BSTR bstrLicKey = NULL)
	{ return CreateControl(GetClsid(), lpszWindowName, dwStyle, rect, pParentWnd, nID,
		pPersist, bStorage, bstrLicKey); }

// Attributes
public:

// Operations
public:
	LPDISPATCH GetLevel1();
	void SetLevel1(LPDISPATCH newValue);
	CString GetLevelX1();
	void SetLevelX1(LPCTSTR lpszNewValue);
	LPDISPATCH GetLevel2();
	void SetLevel2(LPDISPATCH newValue);
	CString GetLevelX2();
	void SetLevelX2(LPCTSTR lpszNewValue);
	LPDISPATCH GetMeter1();
	void SetMeter1(LPDISPATCH newValue);
	CString GetMeterX1();
	void SetMeterX1(LPCTSTR lpszNewValue);
	LPDISPATCH GetMeter2();
	void SetMeter2(LPDISPATCH newValue);
	CString GetMeterX2();
	void SetMeterX2(LPCTSTR lpszNewValue);
	LPDISPATCH GetOscope1();
	void SetOscope1(LPDISPATCH newValue);
	CString GetOscopeX1();
	void SetOscopeX1(LPCTSTR lpszNewValue);
	LPDISPATCH GetOscope2();
	void SetOscope2(LPDISPATCH newValue);
	CString GetOscopeX2();
	void SetOscopeX2(LPCTSTR lpszNewValue);
	LPDISPATCH GetLight1();
	void SetLight1(LPDISPATCH newValue);
	CString GetLightX1();
	void SetLightX1(LPCTSTR lpszNewValue);
	LPDISPATCH GetLight2();
	void SetLight2(LPDISPATCH newValue);
	CString GetLightX2();
	void SetLightX2(LPCTSTR lpszNewValue);
	LPDISPATCH GetSpectrum1();
	void SetSpectrum1(LPDISPATCH newValue);
	CString GetSpectrumX1();
	void SetSpectrumX1(LPCTSTR lpszNewValue);
	LPDISPATCH GetSpectrum2();
	void SetSpectrum2(LPDISPATCH newValue);
	CString GetSpectrumX2();
	void SetSpectrumX2(LPCTSTR lpszNewValue);
	LPDISPATCH GetSpectrum3();
	void SetSpectrum3(LPDISPATCH newValue);
	CString GetSpectrumX3();
	void SetSpectrumX3(LPCTSTR lpszNewValue);
	LPDISPATCH GetSpectrum4();
	void SetSpectrum4(LPDISPATCH newValue);
	CString GetSpectrumX4();
	void SetSpectrumX4(LPCTSTR lpszNewValue);
	LPDISPATCH GetSpectrogram1();
	void SetSpectrogram1(LPDISPATCH newValue);
	CString GetSpectrogramX1();
	void SetSpectrogramX1(LPCTSTR lpszNewValue);
	LPDISPATCH GetSpectrogram2();
	void SetSpectrogram2(LPDISPATCH newValue);
	CString GetSpectrogramX2();
	void SetSpectrogramX2(LPCTSTR lpszNewValue);
	long GetRefreshCountLevel();
	void SetRefreshCountLevel(long nNewValue);
	long GetRefreshCountMeter();
	void SetRefreshCountMeter(long nNewValue);
	long GetRefreshCountOscope();
	void SetRefreshCountOscope(long nNewValue);
	long GetRefreshCountLight();
	void SetRefreshCountLight(long nNewValue);
	long GetRefreshCountSpectrum();
	void SetRefreshCountSpectrum(long nNewValue);
	long GetRefreshCountSpectrogram();
	void SetRefreshCountSpectrogram(long nNewValue);
	BOOL GetEnabled();
	void SetEnabled(BOOL bNewValue);
	BOOL GetAutoConvert();
	void SetAutoConvert(BOOL bNewValue);
	BOOL GetAutoTrigger();
	void SetAutoTrigger(BOOL bNewValue);
	BOOL GetSynchronize();
	void SetSynchronize(BOOL bNewValue);
	long GetSpeed();
	void SetSpeed(long nNewValue);
	long GetTriggerMode();
	void SetTriggerMode(long nNewValue);
	long GetTriggerLevel();
	void SetTriggerLevel(long nNewValue);
	BOOL GetRefreshOnStop();
	void SetRefreshOnStop(BOOL bNewValue);
	BOOL GetRealTime();
	void SetRealTime(BOOL bNewValue);
	BOOL GetEnterIdle();
	void SetEnterIdle(BOOL bNewValue);
	void Trigger();
	void GetPeak(short* PeakL, short* PeakR);
	long GetPWaveFormat();
	void SetPWaveFormat(long nNewValue);
	CMMDspComponentX GetInput();
	void SetInput(LPDISPATCH newValue);
	CString GetInputX();
	void SetInputX(LPCTSTR lpszNewValue);
	CMMDspComponentX GetOutput();
	void SetOutput(LPDISPATCH newValue);
	CString GetOutputX();
	void SetOutputX(LPCTSTR lpszNewValue);
	void AboutBox();
};

//{{AFX_INSERT_LOCATION}}
// Microsoft Visual C++ will insert additional declarations immediately before the previous line.

#endif // !defined(AFX_MMCONNECTORX_H__394F7421_3406_4272_837A_0B36D82DC7B4__INCLUDED_)
